CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE PUBLIC.ACCOUNTS(ACCOUNTID INTEGER GENERATED BY DEFAULT AS SEQUENCE(START WITH 1) PRIMARY KEY, EMAIL VARCHAR(40) NOT NULL, PASSWORD VARCHAR(25) NOT NULL, TUTORID INTEGER DEFAULT -1, NAME VARCHAR(20) NOT NULL, PRONOUNS VARCHAR(15) NOT NULL, MAJOR VARCHAR(20) NOT NULL, CONSTRAINT TUTOR_FOREIGN FOREIGN KEY(TUTORID) REFERENCES TUTORS(TUTORID))
CREATE MEMORY TABLE PUBLIC TUTORS(TUTORID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY, HOURLYRATE NUMERIC DEFAULT 10 NOT NULL, REVIEWSUM INTEGER DEFAULT 0 NOT NULL, REVIEWCOUNT INTEGER DEFAULT 0 NOT NULL)
CREATE MEMORY TABLE PUBLIC.COURSES(COURSEID VARCHAR(8) NOT NULL PRIMARY KEY, COURSENAME VARCHAR(30) NOT NULL)
CREATE MEMORY TABLE PUBLIC.TUTOREDCOURSES(TUTORID INTEGER NOT NULL, COURSEID VARCHAR(8) NOT NULL, CONSTRAINT TUTORED_PK PRIMARY KEY(TUTORID, COURSEID), CONSTRAINT TUTORED_FOREIGN FOREIGN KEY(TUTORID) REFERENCES TUTORS(TUTORID) ON DELETE CASCADE, CONSTRAINT TUTORED_FOREIGN_COURSE FOREIGN KEY(COURSEID) REFERENCES COURSES(COURSEID) ON DELETE CASCADE)
CREATE MEMORY TABLE PUBLIC.TUTORLOCATIONS(TUTORID INTEGER NOT NULL, LOCATIONNAME VARCHAR(30) NOT NULL, CONSTRAINT LOCATION_PK PRIMARY KEY(TUTORID, LOCATIONNAME), CONSTRAINT LOCATION_FOREIGN FOREIGN KEY(TUTORID) REFERENCES TUTORS(TUTORID) ON DELETE CASCADE)
CREATE MEMORY TABLE PUBLIC.SESSION(SESSION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, STUDENTID INTEGER NOT NULL,TUTORID INTEGER NOT NULL, TUTORID INTEGER NOT NULL, TUTORID INTEGER NOT NULL START_DATE_TIME TIMESTAMP WITH TIME ZONE NOT NULL,END_DATE_TIME TIMESTAMP WITH TIME ZONE NOT NULL,LOCATION VARCHAR(32),ACCEPTED BOOLEAN NOT NULL,CONSTRAINT SESSION_STUDENT_FK FOREIGN KEY(STUDENTID) REFERENCES PUBLIC.ACCOUNTS(ACCOUNTID), CONSTRAINT SESSION_TUTOR_FK FOREIGN KEY(TUTORID) REFERENCES PUBLIC.TUTORS(TUTORID))
CREATE MEMORY TABLE PUBLIC.TUTOR_AVAILABILITY(TUTORID INTEGER NOT NULL, START_DATE_TIME TIMESTAMP WITH TIME ZONE NOT NULL, END_DATE_TIME TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT AVAIL_PK PRIMARY KEY(TUTORID, START_DATE_TIME, END_DATE_TIME), CONSTRAINT AVAIL_FOREIGN FOREIGN KEY(TUTORID) REFERENCES TUTORS(TUTORID))
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT DBA TO SA
SET WRITE_DELAY 20
SET FILES SCALE 32
SET SCHEMA PUBLIC
INSERT INTO ACCOUNT VALUES('pankratz25@myumanitoba.ca','$2a$12$xeTxmBShbtIWsT/kdxVD8.k2LI.RdOKAHYdRhgiw7Z5YxTd6.beOG')
INSERT INTO STUDENT VALUES('pankratz25@myumanitoba.ca','Jackson Pankratz','CS','He/Him')
INSERT INTO ACCOUNT VALUES('guder4@myumanitoba.ca','/QZJZjGQ7leHCtg5Ttx2O3yWfmtkplQYMLg.PXVGNnjF4ld46hJe')
INSERT INTO TUTOR VALUES('guder4@myumanitoba.ca','Rob Guderian','Computer Science' + ,'He/Him')
INSERT INTO ACCOUNT VALUES('brown102@myumanitoba.ca','$2a$12$i/QZJZjGQ7leHCtg5Ttx2O3yWfmtkplQYMLg.PXVGNnjF4ld46hJe')
INSERT INTO TUTOR VALUES('brown102@myumanitoba.ca','Theo Brown','Computer Science' + ,'They/Them')
INSERT INTO ACCOUNT VALUES('sharma7@myumanitoba.ca','$2a$12$bnFp/uerz96t0CZwkRhNyuOFQTg54d9K0Pzkhdh/.8p2/ec1SFxjm')
INSERT INTO STUDENT VALUES('sharma7@myumanitoba.ca','Ashna Sharma','Computer Science'+ ,'She/Her')
INSERT INTO ACCOUNT VALUES('huang15@myumanitoba.ca','$2a$12$r9yuopZw8rOLVK.L9FU6k.kaZu3GtrcTvc/PBNleKVcWx/YE6Hc4G')
INSERT INTO STUDENT VALUES('huang15@myumanitoba.ca','Justin Huang','Computer Science'+ ,'He/Him')
INSERT INTO ACCOUNT VALUES('mcmill5@myumanitoba.ca','$2a$12$LMXSy2E2SRxXOyUzT2hwuOV..lVkQHj5sVFgrTQF4QpJWVbo9CBie')
INSERT INTO STUDENT VALUES('mcmill5@myumanitoba.ca','Camryn Mcmillan','Computer Science'+ ,'She/Her')
INSERT INTO TUTOR VALUES('mcmill5@myumanitoba.ca','Camryn Mcmillan','Computer Science'+ ,'She/Her')
INSERT INTO COURSE('COMP 2080', 'Analysis of Algorithms')
INSERT INTO COURSE('COMP 1010', 'Introduction to Computer Science')
INSERT INTO COURSE('COMP 1012', 'Introduction to Computer Science for Engineers')
INSERT INTO COURSE('COMP 2150', 'Object Orientation')
INSERT INTO COURSE('COMP 3380', 'Databases Concepts and Usage')